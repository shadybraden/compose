---
services:
  server:
    image: twentycrm/twenty:v1.8
    container_name: twenty
    volumes:
      - /data/config_storage/twenty/server-local-data:/app/packages/twenty-server/.local-storage
    ports:
      - "3000:3000"
    environment:
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://postgres:${PG_DATABASE_PASSWORD}@db:5432/default
      SERVER_URL: ${SERVER_URL}
      REDIS_URL: redis://redis:6379

      APP_SECRET: ${APP_SECRET}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail ${SERVER_URL}/healthz
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  worker:
    image: twentycrm/twenty:v1.8
    container_name: twenty-worker
    volumes:
      - /data/config_storage/twenty/server-local-data:/app/packages/twenty-server/.local-storage
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://postgres:${PG_DATABASE_PASSWORD}@db:5432/default
      SERVER_URL: ${SERVER_URL}
      REDIS_URL: redis://redis:6379
      DISABLE_DB_MIGRATIONS: "true"  # it already runs on the server
      DISABLE_CRON_JOBS_REGISTRATION: "true"  # it already runs on the server
      STORAGE_TYPE: local
      APP_SECRET: ${APP_SECRET}
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: twenty-postgres
    volumes:
      - /data/config_storage/twenty/db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PG_DATABASE_PASSWORD}
    healthcheck:
      test: pg_isready -U postgres -h localhost -d postgres
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:8.2.2
    container_name: twenty-redis
    restart: unless-stopped
    command: ["--maxmemory-policy", "noeviction"]

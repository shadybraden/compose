---
services:
  anubis:
    image: ghcr.io/techarohq/anubis:v1.23.0
    container_name: anubis
    environment:
      # Telling Anubis, where to listen for Traefik
      - BIND=:8080
      # Telling Anubis to do redirect â€” ensure there is a space after '='
      - 'TARGET= '
      # Specifies which domains Anubis is allowed to redirect to.
      - REDIRECT_DOMAINS=anubis.${DOMAIN},speedtest.${DOMAIN}
      # Should be the full external URL for Anubis (including scheme)
      - PUBLIC_URL=https://anubis.${DOMAIN}
      # Should match your domain for proper cookie scoping
      - COOKIE_DOMAIN=${DOMAIN}
      - LOG_LEVEL=debug
    security_opt:
      - no-new-privileges:true  # helps to increase security
    networks:
      - intranet
    labels:
      - traefik.enable=true  # Enabling Traefik
      - traefik.docker.network=intranet  # Telling Traefik which network to use
      - traefik.http.routers.anubis.rule=Host(`anubis.${DOMAIN}`)  # Only Matching Requests for example.com
      - traefik.http.routers.anubis.entrypoints=https  # Listen on HTTPS
      - traefik.http.services.anubis.loadbalancer.server.port=8080  # Telling Traefik where to receive requests
      - traefik.http.routers.anubis.service=anubis  # Telling Traefik to use the above specified port
      - traefik.http.routers.anubis.tls.certresolver=cloudflare  # Telling Traefik to resolve a Cert for Anubis
      - "homepage.group=Other"
      - "homepage.name=anubis"
      - "homepage.icon=/images/anubis.webp"
      - "homepage.href=https://anubis.${DOMAIN}/"

networks:
  intranet:
    external: true

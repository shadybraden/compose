services:
  database:
    image: "zulip/zulip-postgresql:14"
    restart: unless-stopped
    environment:
      POSTGRES_DB: "zulip"
      POSTGRES_USER: "zulip"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /data/config_storage/zulip/postgresql:/var/lib/postgresql/data:rw
    security_opt:
      - no-new-privileges:true  # helps to increase security
    networks:
      - intranet
  memcached:
    image: memcached:alpine3.22
    restart: unless-stopped
    command:
      - "sh"
      - "-euc"
      - |
        echo 'mech_list: plain' > "$$SASL_CONF_PATH"
        echo "zulip@$$HOSTNAME:$$MEMCACHED_PASSWORD" > "$$MEMCACHED_SASL_PWDB"
        echo "zulip@localhost:$$MEMCACHED_PASSWORD" >> "$$MEMCACHED_SASL_PWDB"
        exec memcached -S
    environment:
      SASL_CONF_PATH: "/home/memcache/memcached.conf"
      MEMCACHED_SASL_PWDB: "/home/memcache/memcached-sasl-db"
      MEMCACHED_PASSWORD: ${MEMCACHED_PASSWORD}
    security_opt:
      - no-new-privileges:true  # helps to increase security
    networks:
      - intranet
  rabbitmq:
    image: "rabbitmq:4.0.7"
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: "zulip"
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - /data/config_storage/zulip/rabbitmq:/var/lib/rabbitmq:rw
    security_opt:
      - no-new-privileges:true  # helps to increase security
    networks:
      - intranet
  redis:
    image: "redis:alpine3.22"
    restart: unless-stopped
    command:
      - "sh"
      - "-euc"
      - |
        echo "requirepass '$$REDIS_PASSWORD'" > /etc/redis.conf
        exec redis-server /etc/redis.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - /data/config_storage/zulip/redis:/data:rw
    security_opt:
      - no-new-privileges:true  # helps to increase security
    networks:
      - intranet
  zulip:
    image: "zulip/docker-zulip:11.1-0"
    restart: unless-stopped
    build:
      context: .
      args:
        ZULIP_GIT_URL: https://github.com/zulip/zulip.git
        ZULIP_GIT_REF: "11.1"
#    ports:
#      - "25:25"
#      - "80:80"
#      - "443:443"
    environment:
      DB_HOST: "database"
      DB_HOST_PORT: "5432"
      DB_USER: "zulip"
#      SSL_CERTIFICATE_GENERATION: "self-signed"  # ???
      SETTING_MEMCACHED_LOCATION: "memcached:11211"
      SETTING_RABBITMQ_HOST: "rabbitmq"
      SETTING_REDIS_HOST: "redis"
      SECRETS_email_password: ${SECRETS_email_password}
      ## These should match RABBITMQ_DEFAULT_PASS, POSTGRES_PASSWORD,
      ## MEMCACHED_PASSWORD, and REDIS_PASSWORD above.
      SECRETS_rabbitmq_password: ${RABBITMQ_DEFAULT_PASS}
      SECRETS_postgres_password: ${POSTGRES_PASSWORD}
      SECRETS_memcached_password: ${MEMCACHED_PASSWORD}
      SECRETS_redis_password: ${REDIS_PASSWORD}
      SECRETS_secret_key: ${SECRETS_secret_key}
      SETTING_EXTERNAL_HOST: "zulip.${DOMAIN}"
      SETTING_ZULIP_ADMINISTRATOR: ${SETTING_ZULIP_ADMINISTRATOR}
      SETTING_EMAIL_HOST: "" # e.g. smtp.example.com
      SETTING_EMAIL_HOST_USER: ${SETTING_EMAIL_HOST_USER}
      SETTING_EMAIL_PORT: "587"
      ## It seems that the email server needs to use ssl or tls and can't be used without it
      SETTING_EMAIL_USE_SSL: "False"
      SETTING_EMAIL_USE_TLS: "True"
      ## Uncomment to enable the incoming email gateway.  You will need to
      ## ensure that email to emaildomain.example.com is routed to this host
      ## (e.g. via MX record)
      # SETTING_EMAIL_GATEWAY_PATTERN: "%s@emaildomain.example.com"
      ZULIP_AUTH_BACKENDS: "EmailAuthBackend"
      ## Uncomment this when configuring the mobile push notifications service
      # SETTING_ZULIP_SERVICE_PUSH_NOTIFICATIONS: "True"
      # SETTING_ZULIP_SERVICE_SUBMIT_USAGE_STATISTICS: "True"

      ## If you're using a reverse proxy, you'll want to provide the
      ## comma-separated set of IP addresses to trust here.
      # LOADBALANCER_IPS: ""

      ## By default, files uploaded by users and profile pictures are
      ## stored directly on the Zulip server. You can configure files
      ## to be stored in Amazon S3 or a compatible data store
      ## here. See docs at:
      ##
      ##   https://zulip.readthedocs.io/en/latest/production/upload-backends.html
      ##
      ## If you want to use the S3 backend, you must set
      ## SETTING_LOCAL_UPLOADS_DIR to None as well as configuring the
      ## other fields.
      # SETTING_LOCAL_UPLOADS_DIR: "None"
      # SETTING_S3_AUTH_UPLOADS_BUCKET: ""
      # SETTING_S3_AVATAR_BUCKET: ""
      # SETTING_S3_ENDPOINT_URL: "None"
      # SETTING_S3_REGION: "None"
    volumes:
      - /data/config_storage/zulip/zulip:/data:rw
    ulimits:
      nofile:
        soft: 1000000
        hard: 1048576
    security_opt:
      - no-new-privileges:true  # helps to increase security
    networks:
      - intranet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zulip.entrypoints=http"
      - "traefik.http.routers.zulip.rule=Host(`zulip.${DOMAIN}`)"
      - "traefik.http.middlewares.zulip-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.zulip.middlewares=zulip-https-redirect"
      - "traefik.http.routers.zulip-secure.entrypoints=https"
      - "traefik.http.routers.zulip-secure.rule=Host(`zulip.${DOMAIN}`)"
      - "traefik.http.routers.zulip-secure.tls=true"
      - "traefik.http.routers.zulip-secure.service=zulip"
      - "traefik.http.services.zulip.loadbalancer.server.port=80"  # port of the service.
      - "traefik.docker.network=intranet"
      - "homepage.group=Other"
      - "homepage.name=zulip"
      - "homepage.icon=/images/zulip.png"
      - "homepage.href=https://zulip.${DOMAIN}/"

networks:
  intranet:
    external: true
